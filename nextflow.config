//export NXF_WORK="./nextflow_zwc"

params {
    h =null
    help =null
    HiFi_Somatic_SampleFilelist = "./COLO829_HCC1395_HiFi_Somatic_Analysis_Samplesheet.txt" 
    // "./HiFi_Somatic_COLO829_Samplesheet.txt"  //"./HiFi_Somatic_Samplesheet.txt"
    //a txt file that recording the isoseq_fastq. Each row have two columns as samplename and fastq file name. Each sample's fastq is from Pacbio Isoseq pipeline. 
   
    project = "HiFi_Somatic_Analysis_COLO829_HCC1395_WGS"   // "HiFi_Somatic_Analysis_Nextflow_Summit" // 
    //A project atlas for the current Pacbio somatic analysis       
       
    outdir= "." // "./"  "/scratch_space/wzhang42"
    // Output dir for storing the result from each publishedDir
    
    TMP_DIR="/scratch_space/wzhang42/tmp"    //"${outdir}/tmp"
    // Temporatory folder for stroring the intermediated files from some program, wihich is, default in the /tmp.  
    
    //The following three parameters are related to Long read Mapping
    genome_build="hg38"   
    //"hg38(default) | T2T | hg19 | b37 | mm10"  
    
    containerPath="/research/groups/cab/projects/Control/common/HiFi_Somatic_Nextflow/singularity_container"  
    //"${PWD}/singularity_container"
    // "/research/groups/cab/projects/Control/common/HiFi_Somatic_Nextflow/singularity_container"  
    // Path for the singularity SIFs that used in this nextflow pipeline. 
 
    HiFi_Somatic_Config="/research/groups/cab/projects/Control/common/HiFi_Somatic_Nextflow/HiFi_Somatic_Config"
    //"${PWD}/HiFi_Somatic_Config" 
    //"/research/groups/cab/projects/Control/common/HiFi_Somatic_Nextflow/HiFi_Somatic_Config"    

    PBMM2 {
     ThreadN=16
     //number of cpus for running multi-thread pbmm2-mapping
    }

    Select_BAM_QC_mosdepth = "Y"
    //Whether select to run BAM_QC_mosdepth. Y(Default) | N

    BAM_QC_mosdepth {
      ThreadN=16
      // number of cpus for running multi-thread BAM_QC_mosdepth
    }

    Select_BAM_QC_bam_coverage = "Y"
    //Whether select to run BAM_QC_bam_coverage. Y(Default) | N

    BAM_QC_bam_coverage {
      ThreadN=16
      // number of cpus for running multi-thread BAM_QC_bam_coverage
      bamCoverage_BIN_PATH="/hpcf/authorized_apps/rhel7_apps/python/install/3.7.0/bin"
    } 
        
    Select_DeepSomatic= "Y"
    //Whether select to run Deepsomatic for somatic SNV detection. Y(Default) | N
    
    // number of cpus for running multi-thread deepsomatic
    Deepsomatic {    
      ThreadN=12
      // number of cpus for running multi-thread deepsomatic
      CMD_Prefix="" 
    }    

    Select_Clair3_SNV= "Y"
    // Whether select to run Clair3 for Germline SNV detection. Y(Default) | N
    Clair3_SNV {
      ThreadN=4
      clair_platform="hifi"  //hifi,hifi_revio 
      clair_model="hifi_revio"  //hifi  hifi_revio  hifi_sequel2  ilmn  ont
    }   
    
    Select_Severus_SV = "Y"
    //Whether select to run Severus for somatic SV detection. Y(Default) | N
    
    // Severus_SV_ThreadN=8  
    // number of cpus for running multi-thread Severus
    Severus {
      ThreadN=8
      // number of cpus for running multi-thread Severus
      
      trf_bed="${HiFi_Somatic_Config}/hifisomatic_resources/human_GRCh38_no_alt_analysis_set.trf.bed"
      //bed file with tandem repeat locations
 
      min_supp_reads=3
      // minimum reads supporting double breakpoint
    }  
    
    Select_PredictHRD= "Y"
    // Whether select to run PredictHRD. Y(Default) | N
   
    Select_MutationalPattern = "N"
    // Whether select to run MutationalPattern for somatic SNV signature analysis. Y(Default) | N
    MutationalPattern {
      max_delta = 0.06 // 0.02 //0.04
    }         
    
    ENSEMBLE_DATA_DIR="${HiFi_Somatic_Config}/hmf_dna_pipeline_resources"
    //Used in the following modules AMBER, COBALT and Purple
    
    Select_AMBER= "Y" 
    // Whether select to run AMBER to generate a tumor BAF file which can be used in PURPLE for tumor purity ploidy estimation. Y(Default) | N
    AMBER {
     BIN_JAR="/app/amber.jar"
     ThreadN=4
     REF_GENOME_VER="V38" //"GRCh38"
    }
    
    Select_COBALT= "Y"
    // Whether select to run COBALT to Count bam lines to determine the read depth ratios of the supplied tumor and reference genomes, which result can be used in PURPLE for tumor purity ploidy estimation. Y(Default) | N
    COBALT {
     BIN_JAR="/app/cobalt.jar"
     ThreadN=4
    }

    Select_PURPLE= "Y"
    // Whether select to run PURPLE for tumor purity ploidy estimation. Y(Default) | N
    PURPLE {
      BIN_JAR="/app/purple.jar"
      CIRCOS_BIN="/usr/bin/circos"
      ThreadN=4
      REF_GENOME_VER="38"
      
      highlyDiploidPercentage=0.97
      somaticMinPuritySpread=0.150
      max_purity=0.99
      min_purity=0.08
      min_ploidy=1
      max_ploidy=8
    }
    
    Select_HiFiPhase ="N"
    // Whether select to run HiFiPhase for normal samples. Y(Default) | N
    HiFiPhase {
      ThreadN=2
    }

    Select_HiFiPhase_Somatic="N"
    // Whether select to run HiFiPhasing for tumor samples Y(Default) | N
    HiFiPhase_Somatic {
      ThreadN=2
    }    

    Select_Tumor_pb_cpg="Y"
    // Whether select to to run pb_cpg score for tumor samples. Y(Default) | N

    Select_Normal_pb_cpg="Y"
    // Whether select to run pb_cpg score for nromal samples. Y(Default) | N
    pb_cpg_score {
       minmapq =1
       mincov= 4
       model="/opt/pb-CpG-tools-v2.3.2-x86_64-unknown-linux-gnu/models/pileup_calling_model.v1.tflite"
       ThreadN=4
    }     

    Select_DSS_DMR="Y"
    // Whether select to run Differential Methylation Region(DMR) detection for tumor and normal paried samples. Y(Default) | N
    DSS_DMR {
      ThreadN=4
    }    

    Select_DMR_annotation="Y"
    // Whether select to run the annotation of the detected differntial methylation regions. Y(Default) | N
    DMR_annotation {
      ThreadN=4
    }

    Select_Annot_SNV="Y"
    // Whether select to run the annotation of the called somatic SNVs (by Deepsomatics). Y(Default) | N    
    bcftool_norm_Somatic {
       ThreadN=4
    }
    
    VEP_Annot_Somatic {
       ThreadN=4
       vep_cache="${HiFi_Somatic_Config}/homo_sapiens_refseq_vep_110_GRCh38.tar.gz"
    }    

    Select_Annot_SV="Y"
    // Whether select to run the annotation of the called somatic SVs (By Severus). Y(Default) | N    
    SVPack {
       svlen=50
       control_vcf="${HiFi_Somatic_Config}/hifisomatic_resources/sniffles_all_non_germline.nosamples.vcf.gz"
       ref_gff="${HiFi_Somatic_Config}/hifisomatic_resources/ensembl.GRCh38.101.reformatted.gff3.gz"
    }

    AnnotSV {
       annotsv_cache="${HiFi_Somatic_Config}/annotsv_cache.tar.gz"
    }
       
    Select_CNVKit_Somatic="Y"
    // Whether select to run the CNVKit_Somatic. Y(Default) | N
    CNVKit {
       ThreadN=4
       refFlat="${HiFi_Somatic_Config}/hifisomatic_resources/refFlat.hg38.txt"
       target_avg_size=10000
       min_var_depth=20 
    }

    TMP_DIR="/scratch_space/wzhang42/tmp"    //"${outdir}/tmp" 
       
    AUTO_DIR ="/research/rgs01/applications/hpcf/authorized_apps/cab/Automation"
    REF_DIR ="${AUTO_DIR}/REF/Homo_sapiens/NCBI"
    
    Build_b37 {
        // REFERENCE="${REF_DIR}/GRCh37-lite/bwa-index/GRCh37-lite_wochr/GRCh37-lite.fa"
        REFERENCE="${AUTO_DIR}/REF/Homo_sapiens/NCBI/GRCh37-lite/bwa-index/GRCh37-lite_wochr/GRCh37-lite.fa"
        // Reference genome's fasta
    }
    
    Build_hg38 {     
        //REFERENCE="${REF_DIR}/GRCh38_no_alt/bwa-index/0.7.17-r1188/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"
        REFERENCE="${AUTO_DIR}/REF/Homo_sapiens/NCBI/GRCh38_no_alt/bwa-index/0.7.17-r1188/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"
        // Reference genome's fasta 
    }

    Build_hg19 {
        REFERENCE="/home/wzhang42/Misc_Database/human_hs37d5.fasta" //"/research/dept/cab/common/users/wzhang42/truvari_test/ref/human_hs37d5.fasta"
        // Reference genome's fasta 
    }
    
    Build_T2T {
         REFERENCE="/research_jude/rgs01_jude/groups/cab/projects/Control/common/scripts/VariantCalling/beta/REF/Homo_sapiens/NCBI/chm13v2.0/chm13v2.0.fa"
      //  "/rgs01/project_space/cab/Control/common/scripts/VariantCalling/beta/REF/Homo_sapiens/NCBI/chm13v2.0/chm13v2.0.fa"
        // Reference genome's fasta 
    }
}

profiles {
    singularity {
        process.executor = 'lsf'
        executor.queueSize = 200
        process.queue = 'standard' // 'large_core_count' // 'heavy_io' // 'large_core_count' // 'standard'
        process.scratch= false //true
        process.clusterOptions = '-P HiFi_Somatic -J HiFi_Somatic'
        process.max_cpus = 32
        executor.jobName = { "$task.name - $task.hash" }  

        singularity.enabled    = true
        singularity.autoMounts = true
        singularity.runOptions = "--bind ${params.REF_DIR} --bind ${params.TMP_DIR} --bind ${params.TMP_DIR}:/tmp  --bind $LSF_TMPDIR:/lsf_tmp" 
        process {
            withName: PBMM2_Align {
              cpus = "${params.PBMM2.ThreadN}"
              memory = '32GB'
              container= "file:///${params.containerPath}/pbmm2_1.12.0.sif"
            }
       }

       process {
            withName: BAM_QC_mosdepth {
              cpus = "${params.BAM_QC_mosdepth.ThreadN}"
              memory = '32GB'
              container= "file:///${params.containerPath}/mosdepth_0.3.4.sif"
            }
	}

        process {
            withName: BAM_QC_bam_coverage {
              module = 'python/3.7.0'
              memory = '32GB'
              cpus = "${params.BAM_QC_bam_coverage.ThreadN}"
            }
	}

        process { 
            withName: DeepSomatic_SNV {
              cpus = "${params.Deepsomatic.ThreadN}"
              memory = '56GB'
              container= "file:///${params.containerPath}/deepsomatic_1.6.1.sif"
            }
        }

        process {
       	     withName: Clair3_SNV {
               memory = '32GB'
       	       cpus = "${params.Clair3_SNV.ThreadN}"
               container= "file:///${params.containerPath}/clair3.sif"
       	     }
        }
       
        process {
            withName: Severus_SV {
              cpus = "${params.Severus.ThreadN}"
              memory = '32GB'
              container= "file:///${params.containerPath}/severus.sif"
            }
        }
        
        process {
            withName: PredictHRD {
               memory = '32GB'
               container= "file:///${params.containerPath}/chord.sif"
            }
	}

        process	{
           withName: MutationalPattern {
              memory = '64GB'
              container= "file:///${params.containerPath}/somatic_r_tools.sif"
            }
        }        

        process {
            withName: AMBER {
              memory = '32GB'
              cpus = "${params.AMBER.ThreadN}"
              params.AMBER.BIN_JAR="/app/amber.jar"
              container= "file:///${params.containerPath}/purple.sif"
            }
	}

	process {
            withName: COBALT {
              memory = '32GB'
              params.COBALT.BIN_JAR="/app/cobalt.jar"
              cpus = "${params.COBALT.ThreadN}"
              container= "file:///${params.containerPath}/purple.sif"
            }
	}

	process {
            withName: PURPLE {
              memory = '32GB'
              params.PURPLE.BIN_JAR="/app/purple.jar"
              params.PURPLE.CIRCOS_BIN="/usr/bin/circos"
              cpus = "${params.PURPLE.ThreadN}"
              container= "file:///${params.containerPath}/purple.sif"
            }
	}

        process {
            withName: HiFiPhase {
              memory = '100GB'
              cpus = "${params.HiFiPhase.ThreadN}"
              container= "file:///${params.containerPath}/hiphase.sif"
            }
        }

        process {
            withName: HiFiPhase_Somatic {
              memory = '100GB'
              cpus = "${params.HiFiPhase_Somatic.ThreadN}"
              container= "file:///${params.containerPath}/hiphase.sif"
            }
        }

        process {
            withName: pb_cpg_score {
              memory = '32GB'
              cpus = "${params.pb_cpg_score.ThreadN}"
              container= "file:///${params.containerPath}/pb-cpg-tools.sif"
            }
        }

         process {
            withName: DSS_DMR {
              memory = '32GB'
              cpus = "${params.DSS_DMR.ThreadN}"
              container= "file:///${params.containerPath}/somatic_r_tools.sif"
            }
        }

        process {
            withName: DMR_annotation {
              memory = '32GB'
              cpus = "${params.DMR_annotation.ThreadN}"
              container= "file:///${params.containerPath}/somatic_r_tools.sif"
            }
        }

        process {
            withName: bcftool_norm_Somatic {
              cpus = "${params.bcftool_norm_Somatic.ThreadN}"
              container= "file:///${params.containerPath}/bcftools_1.17.sif"
            }
        }

        process {
            withName: VEP_Annot_Somatic {
              cpus = "${params.bcftool_norm_Somatic.ThreadN}"
              container= "file:///${params.containerPath}/ensembl-vep.sif"
            }
        }

        process {
            withName: SVPack {
              memory='8GB'
              container= "file:///${params.containerPath}/svpack.sif"
            }
        }

        process {
            withName: recover_mate_bnd {
              memory='8GB'
              container= "file:///${params.containerPath}/bcftools_1.17.sif"
            }
        }

        process {
            withName: AnnotSV {
              memory='8GB'
              container= "file:///${params.containerPath}/annotsv_3.3.6.sif"
            }
        }
        
        process {
            withName: CNVKit_Somatic {
              memory='8GB'
              cpus = "${params.CNVKit.ThreadN}"
              container= "file:///${params.containerPath}/cnvkit_0.9.10.sif"
            }
        }

       process {
            withName: CNVKit_Merge_Germline_VCFs {
              memory='8GB'
              container= "file:///${params.containerPath}/bcftools_1.17.sif"
            }
       }

      process {
            withName: CNVKit_Recall {
              memory='8GB'
              container= "file:///${params.containerPath}/cnvkit_0.9.10.sif"
            }
       }

    } 
}

